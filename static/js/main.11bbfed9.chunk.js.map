{"version":3,"sources":["Components/Api.js","Components/DropdownCategories.js","StateProvider.js","Components/SearchBox.js","Components/Navbar.js","Components/MovieItem.js","Components/MoviesGrid.js","Components/MainPage.js","Components/MoviePage.js","Components/Footer.js","Components/ActorPage.js","App.js","serviceWorker.js","index.js"],"names":["constructUrl","path","query","queryText","DropdownCategories","props","SEARCH_URL_CATEGORIES","useState","categories","setCategories","useEffect","fetch","then","res","json","data","undefined","genres","id","name","catch","err","console","log","Dropdown","style","marginRight","Toggle","variant","category","Menu","length","map","Item","href","key","onSelect","setCategory","StateContext","createContext","StateProvider","useReducer","reducer","initialState","state","dispatch","Provider","value","children","isLoading","movies","action","type","payload","SearchBox","useContext","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","searchQuery","has","get","categoryId","parseInt","categoryName","setQuery","SEARCH_URL","results","filter","movie","genre_ids","includes","fetchMovies","Form","inline","onSubmit","event","preventDefault","push","pathname","flexFlow","FormControl","placeholder","className","onChange","e","target","Button","Spinner","animation","size","Navbar","bg","expand","to","Brand","color","aria-controls","Collapse","Nav","MovieItem","Card","width","Img","src","backdrop_path","Fragment","title","count","vote_average","color2","release_date","MoviesGrid","Row","md","lg","xs","Col","MainPage","MoviePage","setMovie","trailers","setTrailers","actors","setActors","movie_id","match","params","a","resVideos","dataVideos","resActors","dataActors","cast","fetchData","baseUrl","nullPhoto","moiveImage","posterImage","poster_path","backgroundImage","backgroundSize","onClick","goBack","Container","alt","original_title","overview","genre","Badge","marginLeft","slice","actor","height","profile_path","objectfit","allowFullScreen","Footer","icon","faGithub","ActorPage","actorId","person","setPerson","profileImage","birthday","biography","place_of_birth","App","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.11bbfed9.chunk.js","sourcesContent":[" const TMDB_BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = \"542003918769df50083a13c415bbc602\";\n\nexport  function constructUrl(path, query) {\n  const queryText = query ? `&query=${query}` : \"\";\n  return `${TMDB_BASE_URL}/${path}?api_key=${API_KEY}` + queryText;\n}\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { constructUrl } from \"./Api\";\nimport { Dropdown } from \"react-bootstrap\";\n\nexport default function DropdownCategories(props) {\n  const SEARCH_URL_CATEGORIES = constructUrl(\"genre/movie/list\", \"\");\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    fetch(SEARCH_URL_CATEGORIES)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.genres !== undefined)\n          setCategories([{ id: 0, name: \"All\" }, ...data.genres]);\n      })\n      .catch((err) => console.log(err));\n  }, [SEARCH_URL_CATEGORIES]);\n\n  return (\n    <Dropdown style={{ marginRight: \"5px\" }}>\n      <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n        {props.category.name || \"Categories\"}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {categories.length > 0 &&\n          categories.map((category) => (\n            <Dropdown.Item\n              href=\"#\"\n              key={category.id}\n              onSelect={() => props.setCategory(category)}\n            >\n              {category.name}\n            </Dropdown.Item>\n          ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React, { useReducer, createContext } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StateContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </StateContext.Provider>\n  );\n};\n\nconst initialState = {\n  isLoading: true,\n  movies: [],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setLoading\":\n      return { ...state, isLoading: action.payload };\n    case \"setMovies\":\n      state.movies=action.payload;\n      return state  ;\n    default:\n      return state ;\n  }\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Form, FormControl, Spinner } from \"react-bootstrap\";\nimport DropdownCategories from \"./DropdownCategories\";\nimport { constructUrl } from \"./Api\";\nimport { StateContext } from \"../StateProvider\";\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\n\nexport default function SearchBox() {\n  const [state, dispatch] = useContext(StateContext);\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const searchQuery=searchParams.has('query')? searchParams.get('query'):\"\";\n  const categoryId = searchParams.has('categoryId')?parseInt( searchParams.get('categoryId')):0;\n  const categoryName = searchParams.has('categoryName')?searchParams.get('categoryName'):\"All\";\n\n  const [category, setCategory] = useState({id:categoryId,name:categoryName});\n\n  const changeCategory = (category) => {\n    setCategory(category);\n  };\n\n  const [query, setQuery] = useState(searchQuery);\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dispatch({ type: \"setMovies\", payload: [] });\n\n    dispatch({ type: \"setLoading\", payload: true });\n\n\n      history.push({\n        pathname: \"/search\",\n        search: \"?query=\" + query+\"&categoryId=\"+category.id+\"&categoryName=\"+category.name,\n    \n      });\n   \n  };\n\n\n  useEffect(() => fetchMovies(searchQuery), [searchQuery,categoryId]);\n\n\n  function fetchMovies(query = \"\") {\n    \n    let SEARCH_URL;\n    if (query !== \"\") {\n      SEARCH_URL = constructUrl(\"search/movie\", query);\n    } else {\n      SEARCH_URL = constructUrl(\"movie/popular\");\n    }\n\n    fetch(SEARCH_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.results !== undefined) {\n          let movies = data.results;\n          if (category.id) {\n            movies = movies.filter((movie) => movie.genre_ids.includes(category.id)\n            );\n          }\n          \n          dispatch({ type: \"setMovies\", payload: movies });\n        }\n        dispatch({ type: \"setLoading\", payload: false });\n\n      })\n\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <Form inline onSubmit={onSubmit} style={{ flexFlow: \"row\" }}>\n      <DropdownCategories category={category} setCategory={changeCategory} />\n\n      <FormControl\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\"mr-sm-2\"\n        value={query}\n        onChange={onChange}\n      />\n      <Button variant=\"outline-secondary\" type=\"submit\">\n        Search\n        <span>\n          {state.isLoading ? (\n            <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />\n          ) : (\n            \" \"\n          )}\n        </span>\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { Navbar as NavBarBootstarp, Nav } from \"react-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport {\nLink\n} from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <NavBarBootstarp bg=\"dark\" expand=\"lg\" className=\"flex-shrink-1\">\n      <Link to=\"/\" >\n      <NavBarBootstarp.Brand style={{ color: \"white\" }}>\n\n        React Movies App\n      </NavBarBootstarp.Brand>\n      </Link>\n      <NavBarBootstarp.Toggle aria-controls=\"basic-Navbar-nav\" />\n      <NavBarBootstarp.Collapse id=\"basic-Navbar-nav\">\n        <Nav className=\"mr-auto\">\n        <Link to=\"/\" style={{ color: \"white\" }}>\n            Home\n          </Link>\n        </Nav>\n        <SearchBox />\n      </NavBarBootstarp.Collapse>\n    </NavBarBootstarp>\n  );\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MovieItem(props) {\n  const baseUrl = \"https://image.tmdb.org/t/p/w500/\";\n  const nullPhoto =\n    \"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\";\n\n  return (\n    <Link to={`/Movie/${props.movie.id}`}>\n      <Card key={props.movie.id} style={{ width: \"100%\" }}>\n        <div className=\"card image\">\n          <Card.Img\n            src={\n              props.movie.backdrop_path !== null\n                ? baseUrl + props.movie.backdrop_path\n                : nullPhoto\n            }\n          />\n          <React.Fragment>\n            <h6 className=\"center datails\">\n              {props.movie.title}\n              <br />\n              <span>\n                Vote Average:{\" \"}\n                <ReactStars\n                  count={10}\n                  value={props.movie.vote_average}\n                  size={14}\n                  color2={\"#ffd700\"}\n                />{\" \"}\n                ({props.movie.vote_average})\n              </span>\n            </h6>\n          </React.Fragment>\n          <div className=\"details\">\n            <div className=\"center\">\n              <p>\n                Released <br />\n                {props.movie.release_date}\n              </p>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </Link>\n  );\n}\n","import React,{useContext} from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport { Row, Col } from \"react-bootstrap\";\nimport {StateContext} from \"../StateProvider\"; \n\nexport default function MoviesGrid() {\n  const [state] = useContext(StateContext);\n\n  return (\n    <div className=\"flex-grow-1 container my-4\">\n      <Row md={3} lg={4} xs={1}>\n        {state.movies.map((movie) => (\n          <Col key={movie.id}>\n            <MovieItem movie={movie} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport MoviesGrid from \"./MoviesGrid\";\nimport { StateContext } from \"../StateProvider\";\nfunction MainPage() {\n  const [state] = useContext(StateContext);\n  return <>{!state.isLoading  && <MoviesGrid />}</>;\n}\n\nexport default MainPage;\n","import React, { useState, useEffect } from \"react\";\nimport { constructUrl } from \"./Api\";\nimport { Button, Badge, Container, Row, Spinner } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function MoviePage(props) {\n  const history = useHistory();\n  const [movie, setMovie] = useState(\"\");\n  const [trailers, setTrailers] = useState([]);\n  const [actors, setActors] = useState([]);\n\n  let movie_id = props.match.params.id;\n  let SEARCH_URL;\n\n  useEffect(() => {\n    async function fetchData() {\n      // You can await here\n      SEARCH_URL = constructUrl(`movie/${movie_id}`);\n      let res = await fetch(SEARCH_URL);\n      let data = await res.json();\n\n\n      SEARCH_URL = constructUrl(`movie/${movie_id}/videos`);\n      let resVideos = await fetch(SEARCH_URL);\n      let dataVideos = await resVideos.json();\n\n      const videos = [];\n      SEARCH_URL = constructUrl(`movie/${movie_id}/credits`);\n      let resActors = await fetch(SEARCH_URL);\n      let dataActors = await resActors.json();\n      let actors = dataActors.cast;\n\n      setTrailers(dataVideos.results);\n\n      setActors(actors);\n      setMovie(data);\n\n    }\n    fetchData();\n  }, [movie_id]);\n\n  const baseUrl = \"https://image.tmdb.org/t/p/w500/\";\n  const nullPhoto =\n    \"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\";\n\n  const moiveImage = movie.backdrop_path\n    ? baseUrl + movie.backdrop_path\n    : nullPhoto;\n  const posterImage = movie.poster_path\n    ? baseUrl + movie.poster_path\n    : nullPhoto;\n  return (\n    <div\n    className=\"flex-grow-1 \"\n      style={{\n        backgroundImage: `url(${moiveImage})`,\n        backgroundSize: \"cover\",\n      }}\n    >\n      <Button variant=\"secondary\" onClick={() => history.goBack()}>\n        Back\n      </Button>\n      {movie.id && (\n        <Container>\n          <Row>\n            <div className=\"col-4\">\n              <img width=\"100%\" alt=\"posterImage\" src={posterImage} />\n            </div>\n            <div className=\"col-8 text-white\">\n              <h5>{movie.original_title}</h5>\n\n              <h5>{movie.release_date}</h5>\n              <h5>{movie.overview}</h5>\n              <h5>{movie.vote_average}</h5>\n\n              {movie.genres\n                ? movie.genres.map((genre) => {\n                    return (\n                      <Badge\n                        style={{ marginRight: \"20px\", marginLeft: \"10px\" }}\n                        variant=\"warning\"\n                      >\n                        {genre.name}\n                      </Badge>\n                    );\n                  })\n                : null}\n              <div className=\" text-white\">\n                {actors.slice(0, 9).map((actor) => {\n                  return (\n                    <Link key={actor.id} to={`/person/${actor.id}`}>\n                      <Badge\n                        key={\"1\"+actor.id}\n                        style={{ marginLeft: \"10px\" }}\n                        className=\"align-middle\"\n                      >\n                        <span>\n                          <div\n                            className=\"rounded-circle overflow-hidden d-inline-block\"\n                            height=\"50px\"\n                            width=\"50px\"\n                          >\n                            <img\n                              src={baseUrl + actor.profile_path}\n                              alt=\"\"\n                              width=\"50px\"\n                              objectfit=\"cover\"\n                            />\n                          </div>\n                          <span>{actor.name}</span>\n                        </span>\n                      </Badge>\n                    </Link>\n                  );\n                })}\n              </div>\n            </div>\n          </Row>\n          <div key={trailers[0].id} className=\"embed-responsive embed-responsive-16by9 my-4\">\n        <iframe className=\"embed-responsive-item\" src={`https://www.youtube.com/embed/${trailers[0].key}?rel=0`} allowFullScreen></iframe>\n      </div>\n        </Container>\n      \n      )}\n      {!movie.id && <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Footer() {\n  return (\n    <footer \n    // style={{position: \"fixed\", bottom: \"0\",width:\"100%\"}} //fixed-bottom\n    className={\"text-light text-center bg-secondary flex-shrink-1\"}\n    >\n      <small style={{ marginRight: \"20px\" }}>Developed by </small>\n      <a href=\"https://github.com/7ananDlshad\" style={{ color: \"white\" }}>\n        <FontAwesomeIcon icon={faGithub} />\n        <small style={{ marginRight: \"20px\" }}>Hanan</small>\n\n      </a>\n      <a href=\"https://github.com/QaysAyad\" style={{ color: \"white\" }}>\n        <FontAwesomeIcon icon={faGithub} />\n        <small style={{ marginRight: \"20px\" }}>Qays</small>\n\n      </a>\n      <a href=\"https://github.com/shirin-muataz\" style={{ color: \"white\" }}>\n        <FontAwesomeIcon icon={faGithub} />\n        <small style={{ marginRight: \"20px\" }}>Shirin</small>\n\n      </a>\n    </footer>\n  );\n}\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { constructUrl } from \"./Api\";\nimport { Button, Container, Row, Spinner } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ActorPage(props) {\n  let actorId = props.match.params.actorId;\n  const history = useHistory();\n\n  const [person, setPerson] = useState({});\n  useEffect(() => {\n    const SEARCH_URL = constructUrl(`person/${actorId}`);\n    fetch(SEARCH_URL)\n      .then((res) => res.json())\n      .then((data) => setPerson(data));\n  }, [actorId]);\n  const baseUrl = \"https://image.tmdb.org/t/p/w500/\";\n  const nullPhoto =\n    \"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\";\n\n  const profileImage = person.profile_path\n    ? baseUrl + person.profile_path\n    : nullPhoto;\n\n  return (\n    <div\n    className=\"flex-grow-1 bg-dark \">\n      <Button variant=\"secondary\" onClick={() => history.goBack()}>\n        Back\n      </Button>\n      {person.id && (\n        <Container>\n          <Row>\n            <div className=\"col-4\">\n              <img width=\"100%\" alt=\"posterImage\" src={profileImage} />\n            </div>\n            <div className=\"col-8 text-white\">\n              <h5>{person.name}</h5>\n\n              <h5>{person.birthday}</h5>\n              <p>{person.biography}</p>\n              <h5>{person.place_of_birth}</h5>\n            </div>\n          </Row>\n        </Container>\n      )}\n      {!person.id && <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navbar from \"./Components/Navbar\";\nimport MainPage from \"./Components/MainPage\";\nimport MoviePage from \"./Components/MoviePage\";\nimport Footer from \"./Components/Footer\";\nimport ActorPage from \"./Components/ActorPage\";\nimport { StateProvider } from \"./StateProvider\";\n\nimport { Route, Redirect, Switch, HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <StateProvider>\n      <HashRouter>\n        <div className=\"d-flex  flex-column vh-100 align-items-stretch p-0 m-0\">\n          <Navbar />\n\n          <Switch>\n            <Route path=\"/iraq-bc-movies-project-students\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path={\"/Movie/:id\"} component={MoviePage} />\n            <Route path={\"/person/:actorId\"} component={ActorPage} />\n            <Route exact path=\"/\" component={MainPage} />\n            <Route path=\"/search\" component={MainPage} />\n          </Switch>\n\n          <Footer />\n        </div>\n      </HashRouter>\n    </StateProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}